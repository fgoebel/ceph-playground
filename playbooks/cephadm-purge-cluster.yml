---
# Copyright Red Hat
# SPDX-License-Identifier: Apache-2.0
#
# This playbook purges a Ceph cluster managed with cephadm
#
# You must define a group [admin] in your inventory with a node where
# the admin keyring is present at /etc/ceph/ceph.client.admin.keyring
#
# Usage:
#
# ansible-playbook -i <inventory host file> cephadm-purge-cluster.yml -e fsid=<your fsid>

- name: confirm whether user really meant to upgrade the cluster
  hosts: localhost
  become: false
  tasks:
    - name: fail if fsid was not provided
      fail:
        msg: >
          You must provide the cluster fsid to be purged.
          ansible-playbook -i <inventory host file> cephadm-purge-cluster.yml -e fsid=<your fsid>
      when: fsid is undefined

    - name: fail if admin group doesn't exist or is empty
      fail:
        msg: >
          You must define a group [admin] in your inventory and add a node where
          admin keyring is present at /etc/ceph/admin.client.keyring
      when: "'ceph-admin' not in groups or groups['ceph-admin'] | length < 1"

- name: make sure admin keyring is present and pause cephadm
  hosts: ceph_bootstrap
  become: true
  remote_user: adu
  gather_facts: false
  tasks:
    - name: check /etc/ceph/admin.client.keyring
      stat:
        path: /etc/ceph/ceph.client.admin.keyring
      register: admin_keyring_stat

    - name: fail if /etc/ceph/admin.client.keyring is not present
      fail:
        msg: >
          You must have /etc/ceph/ceph.client.admin.keyring on this node ({{ inventory_hostname }})
      when: not admin_keyring_stat.stat.exists | bool

    - name: pause cephadm
      command: "cephadm shell -- ceph orch pause"

- hosts: ceph_nodes # foreman_ceph_poc
  become: true
  gather_facts: false
  remote_user: adu
  tasks:
    - import_role:
        name: ceph-defaults

    - name: purge ceph cluster
      command: "cephadm rm-cluster --force {{ '--zap-osds' if ceph_origin == 'rhcs' or ceph_origin == 'shaman' else '' }} --fsid {{ fsid }}"
      when: group_names != ['clients']

    - name: remove status files for ansible
      file:
        dest: "/etc/ceph"
        state: absent

    - name: wipe dev/sdb and dev/sdc
      command: wipefs -fa "{{ item }}"
      loop:
        - /dev/sdb
        - /dev/sdc
      #when: false # jetzt grade bitte nicht xD

    - name: reboot systems and wait to be ready again
      ansible.builtin.reboot: